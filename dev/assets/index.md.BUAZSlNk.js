import{_ as s,c as a,o as t,ai as e}from"./chunks/framework.BFYybF6N.js";const d=JSON.parse('{"title":"MetricSpaces.jl","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":null}'),n={name:"index.md"};function l(r,i,h,p,o,k){return t(),a("div",null,i[0]||(i[0]=[e(`<h1 id="MetricSpaces.jl" tabindex="-1">MetricSpaces.jl <a class="header-anchor" href="#MetricSpaces.jl" aria-label="Permalink to &quot;MetricSpaces.jl {#MetricSpaces.jl}&quot;">â€‹</a></h1><p>A Julia package for working with metric spaces in Topological Data Analysis (TDA), providing efficient data structures and algorithms for metric space operations.</p><h2 id="Overview" tabindex="-1">Overview <a class="header-anchor" href="#Overview" aria-label="Permalink to &quot;Overview {#Overview}&quot;">â€‹</a></h2><p>MetricSpaces.jl provides a comprehensive toolkit for working with metric spaces, including:</p><ul><li><p><strong>Core Types</strong>: Flexible metric space representations</p></li><li><p><strong>Distance Functions</strong>: Various distance metrics (Euclidean, Manhattan, Chebyshev)</p></li><li><p><strong>Metric Balls</strong>: Efficient neighborhood queries</p></li><li><p><strong>Sampling Methods</strong>: Îµ-nets, farthest point sampling, random sampling</p></li><li><p><strong>Datasets</strong>: Built-in geometric datasets (spheres, tori, cubes)</p></li><li><p><strong>Analysis Tools</strong>: Neighborhood analysis, filtering, and nerve computations</p></li></ul><h2 id="Installation" tabindex="-1">Installation <a class="header-anchor" href="#Installation" aria-label="Permalink to &quot;Installation {#Installation}&quot;">â€‹</a></h2><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Pkg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Pkg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MetricSpaces&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="Quick-Start" tabindex="-1">Quick Start <a class="header-anchor" href="#Quick-Start" aria-label="Permalink to &quot;Quick Start {#Quick-Start}&quot;">â€‹</a></h2><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MetricSpaces</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Create a metric space from 2D points</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">points </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> EuclideanSpace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(points)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Find points within distance 1.0 of the first point</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">center </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> X[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nearby_indices </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ball_ids</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(X, center, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Compute pairwise distances</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">distances </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pairwise_distance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(X)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Generate an Îµ-net covering</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">landmarks </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> epsilon_net</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(X, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="Mathematical-Foundation" tabindex="-1">Mathematical Foundation <a class="header-anchor" href="#Mathematical-Foundation" aria-label="Permalink to &quot;Mathematical Foundation {#Mathematical-Foundation}&quot;">â€‹</a></h2><p>This package is built on solid mathematical foundations from metric geometry and topological data analysis. The core concepts include:</p><ul><li><p><strong>Metric Spaces</strong>: Sets equipped with distance functions satisfying the metric axioms</p></li><li><p><strong>Metric Balls</strong>: Fundamental neighborhoods in metric spaces</p></li><li><p><strong>Covering Properties</strong>: Îµ-nets and other geometric covering constructions</p></li><li><p><strong>Sampling Theory</strong>: Geometric sampling methods for large metric spaces</p></li></ul><h2 id="Key-Features" tabindex="-1">Key Features <a class="header-anchor" href="#Key-Features" aria-label="Permalink to &quot;Key Features {#Key-Features}&quot;">â€‹</a></h2><h3 id="Efficient-Algorithms" tabindex="-1">ðŸŽ¯ <strong>Efficient Algorithms</strong> <a class="header-anchor" href="#Efficient-Algorithms" aria-label="Permalink to &quot;ðŸŽ¯ **Efficient Algorithms** {#Efficient-Algorithms}&quot;">â€‹</a></h3><p>Optimized implementations of fundamental metric space operations with progress tracking for large datasets.</p><h3 id="Rich-Dataset-Support" tabindex="-1">ðŸ“Š <strong>Rich Dataset Support</strong> <a class="header-anchor" href="#Rich-Dataset-Support" aria-label="Permalink to &quot;ðŸ“Š **Rich Dataset Support** {#Rich-Dataset-Support}&quot;">â€‹</a></h3><p>Built-in generators for common geometric datasets used in TDA research and education.</p><h3 id="Flexible-Distance-Functions" tabindex="-1">ðŸ”§ <strong>Flexible Distance Functions</strong> <a class="header-anchor" href="#Flexible-Distance-Functions" aria-label="Permalink to &quot;ðŸ”§ **Flexible Distance Functions** {#Flexible-Distance-Functions}&quot;">â€‹</a></h3><p>Support for multiple distance metrics with easy extensibility for custom distance functions.</p><h3 id="Analysis-Tools" tabindex="-1">ðŸ“ˆ <strong>Analysis Tools</strong> <a class="header-anchor" href="#Analysis-Tools" aria-label="Permalink to &quot;ðŸ“ˆ **Analysis Tools** {#Analysis-Tools}&quot;">â€‹</a></h3><p>Comprehensive tools for neighborhood analysis, filtering, and geometric property computation.</p><h2 id="Getting-Started" tabindex="-1">Getting Started <a class="header-anchor" href="#Getting-Started" aria-label="Permalink to &quot;Getting Started {#Getting-Started}&quot;">â€‹</a></h2><p>Continue to the mathematical background to understand the theory behind metric spaces, or jump to the getting started guide for practical examples.</p>`,23)]))}const g=s(n,[["render",l]]);export{d as __pageData,g as default};
